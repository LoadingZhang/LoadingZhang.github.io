<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Loading Blog</title>
    <link>http://loadingzhang.github.io/posts/</link>
    <description>Recent content in Posts on Loading Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 12 Feb 2022 15:03:19 +0800</lastBuildDate><atom:link href="http://loadingzhang.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>小米CR660x开启SSH刷PBBoot&#43;Padavan</title>
      <link>http://loadingzhang.github.io/posts/cr660x-ssh-padavan/</link>
      <pubDate>Sat, 12 Feb 2022 15:03:19 +0800</pubDate>
      
      <guid>http://loadingzhang.github.io/posts/cr660x-ssh-padavan/</guid>
      <description>前言 之前一直想搞一个WIFI6路由器，体验一下WIFI6相比之前有多大的提升。
碰巧最近在网上看到一篇关于CR660X路由器的文章，只要一百多的价格立刻让我心动了。
网上一番搜索之后，马上淘宝下单了一台移动版CR6608，实付153大洋，虽然相比去年论坛里别人120买的贵了不少，但和别的动则数百的WIFI6路由器比起来还是白菜价。
配置参数 处理器：MTK MT7261(2*880Mhz)
ROM：128M
RAM：256M
WAN+LAN一共四个网口
无USB口
说实话，我是拿到机器后才发现没有USB口的，可玩性降低了一大截。
不过百来块体验WIFI6，或者之后组Mesh用也对得起这个价格。
刷机 路由器拿到手第一件事就是开SSH刷Bootloader！
随便网上一搜就能找到CR660X开SSH的教程，看着挺复杂的，需要用到另外一台Openwrt的路由器。
我手头本来是有一台闲置的路由器的，一下子没找着，就在网上找了很多其他型号小米路由器开SSH的教程。
看了一圈下来，基本上原理都是利用Luci的漏洞，将一些URL的参数改成启动dropbear的命令。
因为固件版本更新的原因，很多之前的漏洞都已经封堵住了，例如：
/api/misystem/set_config_iotdev /api/xqnetwork/set_wifi_ap 尝试了一番后，最后还是得依靠另外一个Openwrt。
因为闲置的路由器找不到了，就想到能不能用虚拟机启动Openwrt，Windows开热点充当软路由的方式实现。
正好在网上找到一个也是用虚拟机实现的帖子，让我少踩了不少坑(实际上都踩地差不多了)。
刷机所需的文件在这篇文章里有。
开热点 启动虚拟机前先开启Windows的热点，Win10/11在设置里自带了这个功能，建议将热点名称和密码修改得简单一些，设置成单频段较少出现意外的概率。
配置Openwrt 因为我的系统开了WSL2，之前我还担心Hyper-V或不会和虚拟机(VMware/Virtual Box)冲突，因为N久之前遇到过这个问题，好在现在尝试安装Virtual Box之后发现可以共存。
在KoolCenter下载帖子里提到的固件，选combined-squashfs.vmdk版本可以用虚拟机直接启动。
启动Virtual Box新建虚拟机，磁盘选择下载的镜像；网络类型选桥接，网卡选Windows创建的虚拟网卡，一般叫Microsoft Wi-Fi Direct Virtual Adapter；其他配置看个人喜欢。
  编辑/etc/config/network中LAN的IP为169.254.31.1。   启动后按照网上教程将以下Lua脚本写入/usr/lib/lua/luci/controller/admin/xqsystem.lua
  module(&amp;#34;luci.controller.admin.xqsystem&amp;#34;, package.seeall) function index() local page = node(&amp;#34;api&amp;#34;) page.target = firstchild() page.title = (&amp;#34;&amp;#34;) page.order = 100 page.index = true page = node(&amp;#34;api&amp;#34;,&amp;#34;xqsystem&amp;#34;) page.target = firstchild() page.</description>
    </item>
    
  </channel>
</rss>
